# Generated by Django 4.2.18 on 2025-01-21 10:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GameParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ball_speed', models.FloatField(default=1.0, help_text='Ball speed (range: 1.0 to 2.0).')),
                ('racket_size', models.CharField(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')], default='medium', max_length=10)),
                ('bonus_obstacle', models.BooleanField(default=False)),
                ('bonus_speed', models.BooleanField(default=False)),
                ('bonus_shrink', models.BooleanField(default=False)),
                ('bonus_frost', models.BooleanField(default=False)),
                ('bonus_flash', models.BooleanField(default=False)),
                ('bonus_mind', models.BooleanField(default=False)),
                ('bonus_canon', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Game Parameter',
                'verbose_name_plural': 'Game Parameters',
            },
        ),
        migrations.CreateModel(
            name='GameState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raquette_gauche_y', models.FloatField(default=50.0)),
                ('raquette_droite_y', models.FloatField(default=50.0)),
                ('score_gauche', models.IntegerField(default=0)),
                ('score_droite', models.IntegerField(default=0)),
                ('balle_x', models.FloatField(default=50.0)),
                ('balle_y', models.FloatField(default=50.0)),
                ('balle_speed_x', models.FloatField(default=0.5)),
                ('balle_speed_y', models.FloatField(default=0.5)),
            ],
        ),
        migrations.CreateModel(
            name='GameResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_player1', models.PositiveIntegerField(default=0)),
                ('score_player2', models.PositiveIntegerField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('ongoing', 'Ongoing'), ('finished', 'Finished')], default='ongoing', max_length=10)),
                ('looser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_lost', to=settings.AUTH_USER_MODEL)),
                ('player1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_as_player1', to=settings.AUTH_USER_MODEL)),
                ('player2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_as_player2', to=settings.AUTH_USER_MODEL)),
                ('winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_won', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Game Result',
                'verbose_name_plural': 'Game Results',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='GameInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations_sent', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations_received', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('ongoing', 'Ongoing'), ('finished', 'Finished')], default='pending', max_length=10)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('parameters', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.gameparameters')),
                ('player1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_sessions_as_player1', to=settings.AUTH_USER_MODEL)),
                ('player2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_sessions_as_player2', to=settings.AUTH_USER_MODEL)),
                ('result', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.gameresult')),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
                'ordering': ['-start_time'],
            },
        ),
    ]
